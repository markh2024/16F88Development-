

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan  5 13:09:36 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F88
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,space=0,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F88 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0004                     fsr             equ	4
    52     0004                     fsr0            equ	4
    53     0000                     indf            equ	0
    54     0000                     indf0           equ	0
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0000                     INDF            equ	0	;# 
    60     0001                     TMR0            equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR             equ	4	;# 
    64     0005                     PORTA           equ	5	;# 
    65     0006                     PORTB           equ	6	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     008C                     PIE1            equ	140	;# 
    91     008D                     PIE2            equ	141	;# 
    92     008E                     PCON            equ	142	;# 
    93     008F                     OSCCON          equ	143	;# 
    94     0090                     OSCTUNE         equ	144	;# 
    95     0092                     PR2             equ	146	;# 
    96     0093                     SSPADD          equ	147	;# 
    97     0094                     SSPSTAT         equ	148	;# 
    98     0098                     TXSTA           equ	152	;# 
    99     0099                     SPBRG           equ	153	;# 
   100     009B                     ANSEL           equ	155	;# 
   101     009C                     CMCON           equ	156	;# 
   102     009D                     CVRCON          equ	157	;# 
   103     009E                     ADRESL          equ	158	;# 
   104     009F                     ADCON1          equ	159	;# 
   105     0105                     WDTCON          equ	261	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     000A                     PCLATH          equ	10	;# 
   120     000B                     INTCON          equ	11	;# 
   121     000C                     PIR1            equ	12	;# 
   122     000D                     PIR2            equ	13	;# 
   123     000E                     TMR1            equ	14	;# 
   124     000E                     TMR1L           equ	14	;# 
   125     000F                     TMR1H           equ	15	;# 
   126     0010                     T1CON           equ	16	;# 
   127     0011                     TMR2            equ	17	;# 
   128     0012                     T2CON           equ	18	;# 
   129     0013                     SSPBUF          equ	19	;# 
   130     0014                     SSPCON          equ	20	;# 
   131     0015                     CCPR1           equ	21	;# 
   132     0015                     CCPR1L          equ	21	;# 
   133     0016                     CCPR1H          equ	22	;# 
   134     0017                     CCP1CON         equ	23	;# 
   135     0018                     RCSTA           equ	24	;# 
   136     0019                     TXREG           equ	25	;# 
   137     001A                     RCREG           equ	26	;# 
   138     001E                     ADRESH          equ	30	;# 
   139     001F                     ADCON0          equ	31	;# 
   140     0081                     OPTION_REG      equ	129	;# 
   141     0085                     TRISA           equ	133	;# 
   142     0086                     TRISB           equ	134	;# 
   143     008C                     PIE1            equ	140	;# 
   144     008D                     PIE2            equ	141	;# 
   145     008E                     PCON            equ	142	;# 
   146     008F                     OSCCON          equ	143	;# 
   147     0090                     OSCTUNE         equ	144	;# 
   148     0092                     PR2             equ	146	;# 
   149     0093                     SSPADD          equ	147	;# 
   150     0094                     SSPSTAT         equ	148	;# 
   151     0098                     TXSTA           equ	152	;# 
   152     0099                     SPBRG           equ	153	;# 
   153     009B                     ANSEL           equ	155	;# 
   154     009C                     CMCON           equ	156	;# 
   155     009D                     CVRCON          equ	157	;# 
   156     009E                     ADRESL          equ	158	;# 
   157     009F                     ADCON1          equ	159	;# 
   158     0105                     WDTCON          equ	261	;# 
   159     010C                     EEDATA          equ	268	;# 
   160     010D                     EEADR           equ	269	;# 
   161     010E                     EEDATH          equ	270	;# 
   162     010F                     EEADRH          equ	271	;# 
   163     018C                     EECON1          equ	396	;# 
   164     018D                     EECON2          equ	397	;# 
   165                           
   166                           	psect	strings
   167     00B3                     __pstrings:
   168     00B3                     stringtab:
   169     00B3                     __stringtab:
   170     00B3                     stringcode:	
   171                           ;	String table - string pointers are 1 byte each
   172                           
   173     00B3                     stringdir:
   174     00B3  3000               	movlw	high stringdir
   175     00B4  008A               	movwf	10
   176     00B5  0804               	movf	4,w
   177     00B6  0A84               	incf	4,f
   178     00B7  0782               	addwf	2,f
   179     00B8                     __stringbase:
   180     00B8  3400               	retlw	0
   181     00B9                     __end_of__stringtab:
   182     00B9                     main@delay:
   183     00B9  3464               	retlw	100
   184     00BA  3400               	retlw	0
   185     00BB                     __end_ofmain@delay:
   186     0006                     _PORTB          set	6
   187     0001                     _TMR0           set	1
   188     000B                     _INTCONbits     set	11
   189     0090                     _OSCTUNE        set	144
   190     008F                     _OSCCON         set	143
   191     0086                     _TRISB          set	134
   192     009C                     _CMCON          set	156
   193     009B                     _ANSEL          set	155
   194     0081                     _OPTION_REGbits set	129
   195                           
   196                           	psect	cinit
   197     000D                     start_initialization:	
   198                           ; #config settings
   199                           
   200     000D                     __initialization:
   201                           
   202                           ; Clear objects allocated to COMMON
   203     000D  01F9               	clrf	__pbssCOMMON& (0+127)
   204     000E  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   205     000F                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208     000F                     __end_of__initialization:
   209     000F  0183               	clrf	3
   210     0010  118A  2868         	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMMON
   213     0079                     __pbssCOMMON:
   214     0079                     _delay_counter:
   215     0079                     	ds	2
   216                           
   217                           	psect	cstackCOMMON
   218     0070                     __pcstackCOMMON:
   219     0070                     ?_ISR:
   220     0070                     ?_init_timer0:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ??_ISR:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           ; 1 bytes @ 0x0
   231     0070                     	ds	2
   232     0072                     ?_delay_ms:
   233     0072                     delay_ms@ms:	
   234                           ; 1 bytes @ 0x2
   235                           
   236     0072                     ??_init_timer0:	
   237                           ; 2 bytes @ 0x2
   238                           
   239                           
   240                           ; 1 bytes @ 0x2
   241     0072                     	ds	2
   242     0074                     ?_scan_portb_pins:
   243     0074                     scan_portb_pins@delay_ms_val:	
   244                           ; 1 bytes @ 0x4
   245                           
   246     0074                     ??_delay_ms:	
   247                           ; 2 bytes @ 0x4
   248                           
   249                           
   250                           ; 1 bytes @ 0x4
   251     0074                     	ds	2
   252     0076                     ??_scan_portb_pins:
   253                           
   254                           ; 1 bytes @ 0x6
   255     0076                     	ds	1
   256     0077                     scan_portb_pins@i:
   257                           
   258                           ; 2 bytes @ 0x7
   259     0077                     	ds	2
   260     0079                     ??_main:
   261                           
   262                           	psect	maintext
   263     0068                     __pmaintext:	
   264                           ; 1 bytes @ 0x9
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 19 in file "blinkF88.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : B00/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   284 ;;      Params:         0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0
   286 ;;      Temps:          0       0       0       0       0
   287 ;;      Totals:         0       0       0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels required when called: 3
   290 ;; This function calls:
   291 ;;		_init_timer0
   292 ;;		_scan_portb_pins
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298     0068                     _main:	
   299                           ;psect for function _main
   300                           
   301     0068                     l706:	
   302                           ;incstack = 0
   303                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   304                           
   305     0068  1683               	bsf	3,5	;RP0=1, select bank1
   306     0069  1303               	bcf	3,6	;RP1=0, select bank1
   307     006A  019B               	clrf	27	;volatile
   308     006B                     l708:
   309     006B  3007               	movlw	7
   310     006C  009C               	movwf	28	;volatile
   311     006D  0186               	clrf	6	;volatile
   312     006E                     l710:
   313     006E  3062               	movlw	98
   314     006F  008F               	movwf	15	;volatile
   315     0070  0190               	clrf	16	;volatile
   316     0071                     l712:
   317     0071  118A  2094  118A   	fcall	_init_timer0
   318     0074                     l714:
   319     0074  3064               	movlw	100
   320     0075  00F4               	movwf	scan_portb_pins@delay_ms_val
   321     0076  3000               	movlw	0
   322     0077  00F5               	movwf	scan_portb_pins@delay_ms_val+1
   323     0078  118A  2012  118A   	fcall	_scan_portb_pins
   324     007B  2874               	goto	l714
   325     007C  118A  280B         	ljmp	start
   326     007E                     __end_of_main:
   327                           
   328                           	psect	text1
   329     0012                     __ptext1:	
   330 ;; *************** function _scan_portb_pins *****************
   331 ;; Defined at:
   332 ;;		line 63 in file "./port_scan.h"
   333 ;; Parameters:    Size  Location     Type
   334 ;;  delay_ms_val    2    4[COMMON] const unsigned int 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  i               2    7[COMMON] int 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         2       0       0       0       0
   347 ;;      Locals:         2       0       0       0       0
   348 ;;      Temps:          1       0       0       0       0
   349 ;;      Totals:         5       0       0       0       0
   350 ;;Total ram usage:        5 bytes
   351 ;; Hardware stack levels used: 1
   352 ;; Hardware stack levels required when called: 2
   353 ;; This function calls:
   354 ;;		_delay_ms
   355 ;; This function is called by:
   356 ;;		_main
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360     0012                     _scan_portb_pins:	
   361                           ;psect for function _scan_portb_pins
   362                           
   363     0012                     l674:	
   364                           ;incstack = 0
   365                           ; Regs used in _scan_portb_pins: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   366                           
   367                           
   368                           ;./port_scan.h: 64:     int i;;./port_scan.h: 67:     for (i = 0; i <= 3; i++) {
   369     0012  01F7               	clrf	scan_portb_pins@i
   370     0013  01F8               	clrf	scan_portb_pins@i+1
   371     0014                     l676:
   372     0014  0878               	movf	scan_portb_pins@i+1,w
   373     0015  3A80               	xorlw	128
   374     0016  00FF               	movwf	btemp+1
   375     0017  3080               	movlw	128
   376     0018  027F               	subwf	btemp+1,w
   377     0019  1D03               	skipz
   378     001A  281D               	goto	u85
   379     001B  3004               	movlw	4
   380     001C  0277               	subwf	scan_portb_pins@i,w
   381     001D                     u85:
   382     001D  1C03               	skipc
   383     001E  2820               	goto	u81
   384     001F  2821               	goto	u80
   385     0020                     u81:
   386     0020  2822               	goto	l680
   387     0021                     u80:
   388     0021  2840               	goto	l690
   389     0022                     l680:
   390                           
   391                           ;./port_scan.h: 68:         PORTB = (unsigned char)(1 << i);
   392     0022  3001               	movlw	1
   393     0023  00F6               	movwf	??_scan_portb_pins
   394     0024  0A77               	incf	scan_portb_pins@i,w
   395     0025  2828               	goto	u94
   396     0026                     u95:
   397     0026  1003               	clrc
   398     0027  0DF6               	rlf	??_scan_portb_pins,f
   399     0028                     u94:
   400     0028  3EFF               	addlw	-1
   401     0029  1D03               	skipz
   402     002A  2826               	goto	u95
   403     002B  0876               	movf	??_scan_portb_pins,w
   404     002C  1283               	bcf	3,5	;RP0=0, select bank0
   405     002D  1303               	bcf	3,6	;RP1=0, select bank0
   406     002E  0086               	movwf	6	;volatile
   407     002F                     l682:
   408                           
   409                           ;./port_scan.h: 69:         delay_ms(delay_ms_val);
   410     002F  0875               	movf	scan_portb_pins@delay_ms_val+1,w
   411     0030  00F3               	movwf	delay_ms@ms+1
   412     0031  0874               	movf	scan_portb_pins@delay_ms_val,w
   413     0032  00F2               	movwf	delay_ms@ms
   414     0033  118A  20A6  118A   	fcall	_delay_ms
   415     0036                     l684:
   416                           
   417                           ;./port_scan.h: 70:         PORTB = 0x00;
   418     0036  1283               	bcf	3,5	;RP0=0, select bank0
   419     0037  1303               	bcf	3,6	;RP1=0, select bank0
   420     0038  0186               	clrf	6	;volatile
   421     0039                     l686:
   422                           
   423                           ;./port_scan.h: 71:     }
   424     0039  3001               	movlw	1
   425     003A  07F7               	addwf	scan_portb_pins@i,f
   426     003B  1803               	skipnc
   427     003C  0AF8               	incf	scan_portb_pins@i+1,f
   428     003D  3000               	movlw	0
   429     003E  07F8               	addwf	scan_portb_pins@i+1,f
   430     003F  2814               	goto	l676
   431     0040                     l690:
   432                           
   433                           ;./port_scan.h: 74:     for (i = 3; i >= 0; i--) {
   434     0040  3003               	movlw	3
   435     0041  00F7               	movwf	scan_portb_pins@i
   436     0042  3000               	movlw	0
   437     0043  00F8               	movwf	scan_portb_pins@i+1
   438     0044                     l692:
   439     0044  1FF8               	btfss	scan_portb_pins@i+1,7
   440     0045  2847               	goto	u101
   441     0046  2848               	goto	u100
   442     0047                     u101:
   443     0047  2849               	goto	l696
   444     0048                     u100:
   445     0048  2867               	goto	l42
   446     0049                     l696:
   447                           
   448                           ;./port_scan.h: 75:         PORTB = (unsigned char)(1 << i);
   449     0049  3001               	movlw	1
   450     004A  00F6               	movwf	??_scan_portb_pins
   451     004B  0A77               	incf	scan_portb_pins@i,w
   452     004C  284F               	goto	u114
   453     004D                     u115:
   454     004D  1003               	clrc
   455     004E  0DF6               	rlf	??_scan_portb_pins,f
   456     004F                     u114:
   457     004F  3EFF               	addlw	-1
   458     0050  1D03               	skipz
   459     0051  284D               	goto	u115
   460     0052  0876               	movf	??_scan_portb_pins,w
   461     0053  1283               	bcf	3,5	;RP0=0, select bank0
   462     0054  1303               	bcf	3,6	;RP1=0, select bank0
   463     0055  0086               	movwf	6	;volatile
   464     0056                     l698:
   465                           
   466                           ;./port_scan.h: 76:         delay_ms(delay_ms_val);
   467     0056  0875               	movf	scan_portb_pins@delay_ms_val+1,w
   468     0057  00F3               	movwf	delay_ms@ms+1
   469     0058  0874               	movf	scan_portb_pins@delay_ms_val,w
   470     0059  00F2               	movwf	delay_ms@ms
   471     005A  118A  20A6  118A   	fcall	_delay_ms
   472     005D                     l700:
   473                           
   474                           ;./port_scan.h: 77:         PORTB = 0x00;
   475     005D  1283               	bcf	3,5	;RP0=0, select bank0
   476     005E  1303               	bcf	3,6	;RP1=0, select bank0
   477     005F  0186               	clrf	6	;volatile
   478     0060                     l702:
   479                           
   480                           ;./port_scan.h: 78:     }
   481     0060  30FF               	movlw	255
   482     0061  07F7               	addwf	scan_portb_pins@i,f
   483     0062  1803               	skipnc
   484     0063  0AF8               	incf	scan_portb_pins@i+1,f
   485     0064  30FF               	movlw	255
   486     0065  07F8               	addwf	scan_portb_pins@i+1,f
   487     0066  2844               	goto	l692
   488     0067                     l42:
   489     0067  0008               	return
   490     0068                     __end_of_scan_portb_pins:
   491                           
   492                           	psect	text2
   493     00A6                     __ptext2:	
   494 ;; *************** function _delay_ms *****************
   495 ;; Defined at:
   496 ;;		line 55 in file "./port_scan.h"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  ms              2    2[COMMON] unsigned int 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         2       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; Hardware stack levels required when called: 1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_scan_portb_pins
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524     00A6                     _delay_ms:	
   525                           ;psect for function _delay_ms
   526                           
   527     00A6                     l670:	
   528                           ;incstack = 0
   529                           ; Regs used in _delay_ms: [wreg+status,2]
   530                           
   531                           
   532                           ;./port_scan.h: 56:     delay_counter = 0;
   533     00A6  01F9               	clrf	_delay_counter	;volatile
   534     00A7  01FA               	clrf	_delay_counter+1	;volatile
   535     00A8                     l672:	
   536                           ;./port_scan.h: 57:     while (delay_counter < ms) {
   537                           
   538                           
   539                           ;./port_scan.h: 57:     while (delay_counter < ms) {
   540     00A8  0873               	movf	delay_ms@ms+1,w
   541     00A9  027A               	subwf	_delay_counter+1,w	;volatile
   542     00AA  1D03               	skipz
   543     00AB  28AE               	goto	u75
   544     00AC  0872               	movf	delay_ms@ms,w
   545     00AD  0279               	subwf	_delay_counter,w	;volatile
   546     00AE                     u75:
   547     00AE  1C03               	skipc
   548     00AF  28B1               	goto	u71
   549     00B0  28B2               	goto	u70
   550     00B1                     u71:
   551     00B1  28A8               	goto	l672
   552     00B2                     u70:
   553     00B2                     l35:
   554     00B2  0008               	return
   555     00B3                     __end_of_delay_ms:
   556                           
   557                           	psect	text3
   558     0094                     __ptext3:	
   559 ;; *************** function _init_timer0 *****************
   560 ;; Defined at:
   561 ;;		line 22 in file "./port_scan.h"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; Hardware stack levels required when called: 1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     0094                     _init_timer0:	
   590                           ;psect for function _init_timer0
   591                           
   592     0094                     l600:	
   593                           ;incstack = 0
   594                           ; Regs used in _init_timer0: [status,2]
   595                           
   596                           
   597                           ;./port_scan.h: 24:     TMR0 = 0 ;
   598     0094  1283               	bcf	3,5	;RP0=0, select bank0
   599     0095  1303               	bcf	3,6	;RP1=0, select bank0
   600     0096  0181               	clrf	1	;volatile
   601     0097                     l602:
   602                           
   603                           ;./port_scan.h: 28:     INTCONbits.TMR0IE = 1;
   604     0097  168B               	bsf	11,5	;volatile
   605     0098                     l604:
   606                           
   607                           ;./port_scan.h: 29:     INTCONbits.GIE = 1;
   608     0098  178B               	bsf	11,7	;volatile
   609     0099                     l606:
   610                           
   611                           ;./port_scan.h: 30:     INTCONbits.PEIE = 1;
   612     0099  170B               	bsf	11,6	;volatile
   613     009A                     l608:
   614                           
   615                           ;./port_scan.h: 33:     OPTION_REGbits.T0CS = 0;
   616     009A  1683               	bsf	3,5	;RP0=1, select bank1
   617     009B  1303               	bcf	3,6	;RP1=0, select bank1
   618     009C  1281               	bcf	1,5	;volatile
   619     009D                     l610:
   620                           
   621                           ;./port_scan.h: 34:     OPTION_REGbits.PSA = 0;
   622     009D  1181               	bcf	1,3	;volatile
   623     009E                     l612:
   624                           
   625                           ;./port_scan.h: 42:     OPTION_REGbits.PS2=1 ;
   626     009E  1501               	bsf	1,2	;volatile
   627     009F                     l614:
   628                           
   629                           ;./port_scan.h: 43:     OPTION_REGbits.PS1 = 0 ;
   630     009F  1081               	bcf	1,1	;volatile
   631     00A0                     l616:
   632                           
   633                           ;./port_scan.h: 44:     OPTION_REGbits.PS0 =1 ;
   634     00A0  1401               	bsf	1,0	;volatile
   635     00A1                     l618:
   636                           
   637                           ;./port_scan.h: 47:     TMR0 = 248;
   638     00A1  30F8               	movlw	248
   639     00A2  1283               	bcf	3,5	;RP0=0, select bank0
   640     00A3  1303               	bcf	3,6	;RP1=0, select bank0
   641     00A4  0081               	movwf	1	;volatile
   642     00A5                     l29:
   643     00A5  0008               	return
   644     00A6                     __end_of_init_timer0:
   645                           
   646                           	psect	text4
   647     007E                     __ptext4:	
   648 ;; *************** function _ISR *****************
   649 ;; Defined at:
   650 ;;		line 12 in file "./port_scan.h"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          2       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		Interrupt level 1
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677     007E                     _ISR:	
   678                           ;psect for function _ISR
   679                           
   680     007E                     i1l652:
   681                           
   682                           ;./port_scan.h: 14:     if (INTCONbits.TMR0IF) {
   683     007E  1D0B               	btfss	11,2	;volatile
   684     007F  2881               	goto	u6_21
   685     0080  2882               	goto	u6_20
   686     0081                     u6_21:
   687     0081  288D               	goto	i1l26
   688     0082                     u6_20:
   689     0082                     i1l654:
   690                           
   691                           ;./port_scan.h: 15:         INTCONbits.TMR0IF = 0;
   692     0082  110B               	bcf	11,2	;volatile
   693     0083                     i1l656:
   694                           
   695                           ;./port_scan.h: 16:         delay_counter++;
   696     0083  3001               	movlw	1
   697     0084  07F9               	addwf	_delay_counter,f	;volatile
   698     0085  1803               	skipnc
   699     0086  0AFA               	incf	_delay_counter+1,f	;volatile
   700     0087  3000               	movlw	0
   701     0088  07FA               	addwf	_delay_counter+1,f	;volatile
   702     0089                     i1l658:
   703                           
   704                           ;./port_scan.h: 17:         TMR0 = 248;
   705     0089  30F8               	movlw	248
   706     008A  1283               	bcf	3,5	;RP0=0, select bank0
   707     008B  1303               	bcf	3,6	;RP1=0, select bank0
   708     008C  0081               	movwf	1	;volatile
   709     008D                     i1l26:
   710     008D  0871               	movf	??_ISR+1,w
   711     008E  008A               	movwf	10
   712     008F  0E70               	swapf	??_ISR,w
   713     0090  0083               	movwf	3
   714     0091  0EFE               	swapf	btemp,f
   715     0092  0E7E               	swapf	btemp,w
   716     0093  0009               	retfie
   717     0094                     __end_of_ISR:
   718     0001                     ___latbits      equ	1
   719     007E                     btemp           set	126	;btemp
   720     007E                     wtemp0          set	126
   721                           
   722                           	psect	intentry
   723     0004                     __pintentry:	
   724                           ;incstack = 0
   725                           ; Regs used in _ISR: [wreg]
   726                           
   727     0004                     interrupt_function:
   728     007E                     saved_w         set	btemp
   729     0004  00FE               	movwf	btemp
   730     0005  0E03               	swapf	3,w
   731     0006  00F0               	movwf	??_ISR
   732     0007  080A               	movf	10,w
   733     0008  00F1               	movwf	??_ISR+1
   734     0009  118A  287E         	ljmp	_ISR
   735                           
   736                           	psect	config
   737                           
   738                           ;Config register CONFIG1 @ 0x2007
   739                           ;	Oscillator Selection bits
   740                           ;	FOSC = INTOSCCLK, INTRC oscillator; CLKO function on RA6/OSC2/CLKO pin and port I/O fu
      +                          nction on RA7/OSC1/CLKI pin
   741                           ;	Watchdog Timer Enable bit
   742                           ;	WDTE = OFF, WDT disabled
   743                           ;	Power-up Timer Enable bit
   744                           ;	PWRTE = OFF, PWRT disabled
   745                           ;	RA5/MCLR/VPP Pin Function Select bit
   746                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   747                           ;	Brown-out Reset Enable bit
   748                           ;	BOREN = ON, BOR enabled
   749                           ;	Low-Voltage Programming Enable bit
   750                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   751                           ;	Data EE Memory Code Protection bit
   752                           ;	CPD = OFF, Code protection off
   753                           ;	Flash Program Memory Write Enable bits
   754                           ;	WRT = OFF, Write protection off
   755                           ;	In-Circuit Debugger Mode bit
   756                           ;	DEBUG = 0x1, unprogrammed default
   757                           ;	CCP1 Pin Selection bit
   758                           ;	CCPMX = 0x1, unprogrammed default
   759                           ;	Flash Program Memory Code Protection bit
   760                           ;	CP = OFF, Code protection off
   761     2007                     	org	8199
   762     2007  3F79               	dw	16249
   763                           
   764                           ;Config register CONFIG2 @ 0x2008
   765                           ;	Fail-Safe Clock Monitor Enable bit
   766                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   767                           ;	Internal External Switchover bit
   768                           ;	IESO = ON, Internal External Switchover mode enabled
   769     2008                     	org	8200
   770     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    2
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_scan_portb_pins
    _scan_portb_pins->_delay_ms

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     205
                        _init_timer0
                    _scan_portb_pins
 ---------------------------------------------------------------------------------
 (1) _scan_portb_pins                                      5     3      2     205
                                              4 COMMON     5     3      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2      24
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer0
   _scan_portb_pins
     _delay_ms

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      9      11     78.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      11      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan  5 13:09:36 2025

                          pc 0002                           l42 0067                           l35 00B2  
                         l29 00A5                           u70 00B2                           u71 00B1  
                         u80 0021                           u81 0020                           u75 00AE  
                         u85 001D                           u94 0028                           u95 0026  
                         fsr 0004                          l600 0094                          l610 009D  
                        l602 0097                          l612 009E                          l604 0098  
                        l700 005D                          l614 009F                          l606 0099  
                        l702 0060                          l710 006E                          l616 00A0  
                        l608 009A                          l712 0071                          l618 00A1  
                        l714 0074                          l706 0068                          l708 006B  
                        l670 00A6                          l672 00A8                          l680 0022  
                        l682 002F                          l690 0040                          l674 0012  
                        l692 0044                          l684 0036                          l676 0014  
                        l686 0039                          l696 0049                          l698 0056  
                        u100 0048                          u101 0047                          u114 004F  
                        u115 004D                          _ISR 007E                         ?_ISR 0070  
                       i1l26 008D                         _TMR0 0001                         u6_20 0082  
                       u6_21 0081             ?_scan_portb_pins 0074                         _main 0068  
                       btemp 007E                         start 000B                        ??_ISR 0070  
                      ?_main 0070                        _CMCON 009C                        _ANSEL 009B  
                      i1l652 007E                        i1l654 0082                        i1l656 0083  
                      i1l658 0089                        _PORTB 0006                        _TRISB 0086  
               ?_init_timer0 0070                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000D                 __end_of_main 007E  
                     ??_main 0079                       _OSCCON 008F             __end_of_delay_ms 00B3  
                     saved_w 007E      __end_of__initialization 000F               __pcstackCOMMON 0070  
             _OPTION_REGbits 0081                   __pmaintext 0068                   __pintentry 0004  
           scan_portb_pins@i 0077                    ?_delay_ms 0072                      _OSCTUNE 0090  
                 __stringtab 00B3                      __ptext1 0012                      __ptext2 00A6  
                    __ptext3 0094                      __ptext4 007E                   ??_delay_ms 0074  
                 delay_ms@ms 0072         end_of_initialization 000F            __end_ofmain@delay 00BB  
          ??_scan_portb_pins 0076          start_initialization 000D                  __end_of_ISR 0094  
              ??_init_timer0 0072                  __pbssCOMMON 0079                    ___latbits 0001  
              _delay_counter 0079                    __pstrings 00B3          __end_of_init_timer0 00A6  
          interrupt_function 0004                  __stringbase 00B8                    main@delay 00B9  
            _scan_portb_pins 0012  scan_portb_pins@delay_ms_val 0074           __end_of__stringtab 00B9  
                _init_timer0 0094                     _delay_ms 00A6                   _INTCONbits 000B  
                   intlevel1 0000      __end_of_scan_portb_pins 0068                    stringcode 00B3  
                   stringdir 00B3                     stringtab 00B3  
